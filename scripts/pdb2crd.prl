#!/usr/bin/perl


@line=<STDIN>;

# Segment names:
#@names=qw(A B C D E F G H I J K L M N O P Q R S T U V W X Y Z);
@names=qw(1S 2S 3S 4S 5S 6S 7S 8S 9S);


$numatom=0;
$lastres=-99;
$lastchain=" "; 
$resid=0;
$seg_num=0;

for $i (0..@line-1) {
  if (substr($line[$i],0,4) eq "ATOM") {
    # Taking care of dual conformations (field right before residue name)
    if (substr($line[$i],16,1) eq " " or substr($line[$i],16,1) eq "A") {
      $numatom++;
      
      # Atom name
      if (substr($line[$i],12,1) eq " " and substr($line[$i],16,1) eq " ") {
	$atom_name[$numatom]=substr($line[$i],13,4)
      } elsif (substr($line[$i],12,1) eq " " and substr($line[$i],16,1) eq "A"){
	$atom_name[$numatom]=substr($line[$i],13,3)." ";
      } elsif (substr($line[$i],12,1) ne " ") {
        $nametemp=substr($line[$i],12,4);
        # Taking care of hydrogen names written by gromacs as e.g.  1HH1 instead of HH11
        $first=substr($nametemp,0,1);
        if ( $first =~ /[0-9]/ ) {
            $atom_name[$numatom] =  substr($nametemp,1,3) . $first;
        } else { 
	    $atom_name[$numatom] = $nametemp;
        }
      }
      # Residue name :
      $nametemp=substr($line[$i],17,4);
      if ($nametemp eq "CYS2") {
        $res_name[$numatom]="CYS ";
      } else {
        $res_name[$numatom]=$nametemp;
      }

      # Taking care of NTer hydrogens (ligands can have Hi atoms) 
      if (($atom_name[$numatom] eq "H1  ")&&($res_name[$numatom] ne "LIG ")) { $atom_name[$numatom] = "HT1 ";} 
      if (($atom_name[$numatom] eq "H2  ")&&($res_name[$numatom] ne "LIG ")) { $atom_name[$numatom] = "HT2 ";}
      if (($atom_name[$numatom] eq "H3  ")&&($res_name[$numatom] ne "LIG ")) { $atom_name[$numatom] = "HT3 ";}
    
      # Residue number and chain
      $res_num[$numatom]=substr($line[$i],22,4);
      $chain[$numatom]=substr($line[$i],21,1);
     
      # We detect a segment change if the residue numbers are not consecutive
      # OR if the chain name has changed (for one-residue chains with same resid). 
      if (($res_num[$numatom] ne $lastres)  or ($chain[$numatom] ne $lastchain)) {
	$test=$lastres+1;
	if (($test != $res_num[$numatom]) or ($chain[$numatom] ne  $lastchain)) {
	  $seg_num+=1;
	}
	$lastres=$res_num[$numatom];
        $lastchain=$chain[$numatom];
	$resid++;
      }
      $resid[$numatom]=$resid;
      if ( $seg_num <= 0+@names ) {
      	$segname[$numatom]=$names[$seg_num-1];
      } else {
        # Cope with cases where there are many segments.
        $segname[$numatom]=sprintf("%dS",$seg_num); 
      }
      $x[$numatom]=substr($line[$i],30,8);
      $y[$numatom]=substr($line[$i],38,8);
      $z[$numatom]=substr($line[$i],46,8);
      $weight[$numatom]=substr($line[$i],60,6);
    }
  }
}

print "*\n";
printf("%5d\n",$numatom);

for $i (1..$numatom) {
  # Protect against atom numbers larger than 99999
  $j=$i%100000;
  printf("%5d%5d %4s %4s%10.5f%10.5f%10.5f %-4s %-5d%9.5f\n",
	$j,$resid[$i],$res_name[$i],$atom_name[$i],$x[$i],$y[$i],$z[$i],
	 $segname[$i],$res_num[$i],$weight[$i]);
}
