#!/usr/bin/perl

#########################################################
#
# Written by Vincent Zoete
#
# Modified by Michel A. Cuendet 
#
# For questions, please contact vincent.zoete@unil.ch
# or michel.cuendet@unil.ch
#
#########################################################


$temp = `awk '(\$1=="!Ares")'  data/definitions.str `;
chomp $temp;
my @resA = split(/ /,$temp );
shift @resA;  # Getting rid of the line label in definitions.str
$nresA = scalar(@resA);

$temp = `awk '(\$1=="!Bres") '  data/definitions.str `;
chomp $temp;
my @resB = split(/ /,$temp );
shift @resB;  # Getting rid of the line label in definitions.str
$nresB = scalar(@resB);

my @resAB = @resA;
push( @resAB, @resB) ; 
$nresAB = $nresA + $nresB;



open(IN,"data/charges.crd");
foreach $line (<IN>) {
  # Look only at C alphas, P for lipids, O3 for cholesterol, Na for sodium ions...
  if ( ($line =~ /CA /) or ($line =~ / O3 /) or ($line =~ / P /) or ($line =~ / SOD /) or ($line =~ / CAL / ) or ($line =~ / MG /) or ($line =~ / LIG / ) {
    @w=split(" " ,$line);
    $name[$w[1]]=$w[7]." ".$w[2].$w[8];
  }
}


open(IN,"inter/inter-res-bb.dat") or die "Could not open inter-res-bb.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $vdw_bb[$w[0]]=$w[1];
  $elec_bb[$w[0]]=$w[2];
}
close(IN);

open(IN,"inter/inter-res-sc.dat") or die "Could not open inter-res-bb.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $vdw_sc[$w[0]]=$w[1];
  $elec_sc[$w[0]]=$w[2];
  $vdw_all[$w[0]]=$vdw_bb[$w[0]]+$vdw_sc[$w[0]];
  $elec_all[$w[0]]=$elec_bb[$w[0]]+$elec_sc[$w[0]];
}
close(IN);


open(IN,"solv-a/solv-a-res.dat") or die "Could not open solv-a-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $solv_a_bb[$w[0]]=$w[1];
  $solv_a_sc[$w[0]]=$w[2];
  $solv_a_all[$w[0]]=$w[3];
}
close(IN);

open(IN,"solv-b/solv-b-res.dat") or die "Could not open solv-b-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $solv_b_bb[$w[0]]=$w[1];
  $solv_b_sc[$w[0]]=$w[2];
  $solv_b_all[$w[0]]=$w[3];
}
close(IN);

open(IN,"solv-comp/solv-comp-res.dat") or die "Could not open solv-comp-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $solv_comp_bb[$w[0]]=$w[1];
  $solv_comp_sc[$w[0]]=$w[2];
  $solv_comp_all[$w[0]]=$w[3];
}
close(IN);




open(IN,"sas-a/sas-a-res.dat") or die "Could not open sas-a-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $sas_a_bb[$w[0]]=$w[1];
  $sas_a_sc[$w[0]]=$w[2];
  $sas_a_all[$w[0]]=$w[3];
}
close(IN);

open(IN,"sas-b/sas-b-res.dat") or die "Could not open sas-b-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $sas_b_bb[$w[0]]=$w[1];
  $sas_b_sc[$w[0]]=$w[2];
  $sas_b_all[$w[0]]=$w[3];
}
close(IN);

open(IN,"sas-comp/sas-comp-res.dat") or die "Could not open sas-comp-res.dat";
foreach $line (<IN>) {
  @w=split(" ",$line);
  $sas_comp_bb[$w[0]]=$w[1];
  $sas_comp_sc[$w[0]]=$w[2];
  $sas_comp_all[$w[0]]=$w[3];
}
close(IN);




open(OUTBB,">binding_bb.dat");
open(OUTSC,">binding_sc.dat");
open(OUTALL,">binding_all.dat");

printf OUTBB ("%-12s  %7s  %7s    %7s    %7s   :    %7s \n", "name", "vdw", "elec", "solv", "np", "binding");
printf OUTSC ("%-12s  %7s  %7s    %7s    %7s   :    %7s \n", "name", "vdw", "elec", "solv", "np", "binding");
printf OUTALL ("%-12s  %7s  %7s    %7s    %7s   :    %7s \n", "name", "vdw", "elec", "solv", "np", "binding");


foreach $i (@resAB)  {

  $vdw_bb[$i]=0.5*$vdw_bb[$i];
  $vdw_sc[$i]=0.5*$vdw_sc[$i];
  $vdw_all[$i]=0.5*$vdw_all[$i];
  $vdw_bb_tot+=$vdw_bb[$i];
  $vdw_sc_tot+=$vdw_sc[$i];
  $vdw_all_tot+=$vdw_all[$i];

  $elec_bb[$i]=0.5*$elec_bb[$i];
  $elec_sc[$i]=0.5*$elec_sc[$i];
  $elec_all[$i]=0.5*$elec_all[$i];
  $elec_bb_tot+=$elec_bb[$i];
  $elec_sc_tot+=$elec_sc[$i];
  $elec_all_tot+=$elec_all[$i];

  $Dsolv_bb[$i]=$solv_comp_bb[$i]-($solv_a_bb[$i]+$solv_b_bb[$i]);
  $Dsolv_sc[$i]=$solv_comp_sc[$i]-($solv_a_sc[$i]+$solv_b_sc[$i]);
  $Dsolv_all[$i]=$solv_comp_all[$i]-($solv_a_all[$i]+$solv_b_all[$i]);
  $Dsolv_bb_tot+=$Dsolv_bb[$i];
  $Dsolv_sc_tot+=$Dsolv_sc[$i];
  $Dsolv_all_tot+=$Dsolv_all[$i];

  $Dsas_bb[$i]=$sas_comp_bb[$i]-($sas_a_bb[$i]+$sas_b_bb[$i]);
  $Dsas_sc[$i]=$sas_comp_sc[$i]-($sas_a_sc[$i]+$sas_b_sc[$i]);
  $Dsas_all[$i]=$sas_comp_all[$i]-($sas_a_all[$i]+$sas_b_all[$i]);

  $np_bb[$i]=0.0072*$Dsas_bb[$i];
  $np_sc[$i]=0.0072*$Dsas_sc[$i];
  $np_all[$i]=0.0072*$Dsas_all[$i];
  $np_bb_tot+=$np_bb[$i];
  $np_sc_tot+=$np_sc[$i];
  $np_all_tot+=$np_all[$i];

  $bind_bb[$i]=$vdw_bb[$i]+$elec_bb[$i]+$Dsolv_bb[$i]+$np_bb[$i];
  $bind_sc[$i]=$vdw_sc[$i]+$elec_sc[$i]+$Dsolv_sc[$i]+$np_sc[$i];
  $bind_all[$i]=$vdw_all[$i]+$elec_all[$i]+$Dsolv_all[$i]+$np_all[$i];
  $bind_bb_tot+=$bind_bb[$i];
  $bind_sc_tot+=$bind_sc[$i];
  $bind_all_tot+=$bind_all[$i];


  printf OUTBB ("%-12s  %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n", 
	 $name[$i], $vdw_bb[$i], $elec_bb[$i], $Dsolv_bb[$i], $np_bb[$i], $bind_bb[$i]);

  printf OUTSC ("%-12s  %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n", 
	 $name[$i], $vdw_sc[$i], $elec_sc[$i], $Dsolv_sc[$i], $np_sc[$i], $bind_sc[$i]);

  printf OUTALL ("%-12s  %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n", 
	 $name[$i], $vdw_all[$i], $elec_all[$i], $Dsolv_all[$i], $np_all[$i], $bind_all[$i]);

}

print OUTBB "-------------------------------------------------------------------\n";
print OUTSC "-------------------------------------------------------------------\n";
print OUTALL "-------------------------------------------------------------------\n";

printf OUTBB ("TOT            %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n",
       $vdw_bb_tot, $elec_bb_tot, $Dsolv_bb_tot,
       $np_bb_tot, $bind_bb_tot);

printf OUTSC ("TOT            %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n",
       $vdw_sc_tot, $elec_sc_tot, $Dsolv_sc_tot,
       $np_sc_tot, $bind_sc_tot);
  
printf OUTALL ("TOT           %7.2f  %7.2f    %7.2f    %7.2f   :    %7.2f \n",
       $vdw_all_tot, $elec_all_tot, $Dsolv_all_tot,
       $np_all_tot, $bind_all_tot);

close(OUTBB);
close(OUTSC);
close(OUTALL);

