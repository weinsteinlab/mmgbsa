#!/usr/bin/perl


#########################################################
#
# Written by Vincent Zoete
#
# Modified by M. A. Cuendet 
#
# For questions, please contact vincent.zoete@unil.ch
# or michel.cuendet@hotmail.com
#
#########################################################


$lasta=`grep lastresa data/definitions.str | awk '{print \$3}'`;   # last residue of A (IRES)
chomp $lasta;
print "Last residue of A (IRES) : $lasta \n";

$lastb=`grep lastresb data/definitions.str | awk '{print \$3}'`;   # last residue of B (IRES)
chomp $lastb;
print "Last residue of B (IRES) : $lastb \n";

$nconf=`grep nframes data/definitions.str | awk '{print \$3}'`; # number of conformations (frames)
chomp $nconf;
print "Number of conformations : $nconf \n";

$firstb=$lasta+1;

$temp = `awk '(\$1=="!A")'  data/definitions.str `;
chomp $temp;
my @allA = split(/ /,$temp );
shift @allA;   # Getting rid of the line label in definitions.str

$temp = `awk '(\$1=="!B") '  data/definitions.str `;
chomp $temp;
my @allB = split(/ /,$temp );
shift @allB;  # Getting rid of the line label in definitions.str

my @allAB = @allA;
push( @allAB, @allB) ;

$temp = `awk '(\$1=="!Ares")'  data/definitions.str `;
chomp $temp;
my @resA = split(/ /,$temp );
shift @resA;  # Getting rid of the line label in definitions.str
$nresA = scalar(@resA);

$temp = `awk '(\$1=="!Bres") '  data/definitions.str `;
chomp $temp;
my @resB = split(/ /,$temp );
shift @resB;  # Getting rid of the line label in definitions.str
$nresB = scalar(@resB);

my @resAB = @resA;
push( @resAB, @resB) ; 
$nresAB = $nresA + $nresB;


# Determine type, charges and residue for each atom.

open(IN,"data/charges.crd");
foreach $line (<IN>) {
#  if ($line =~ / A1 / or $line =~ / B1 / or $line =~ / A2 / or $line =~ / B2 /) {
    @w=split(" ",$line);
    $q[$w[0]]=$w[9];
    $resnum[$w[0]]=$w[1];
    $resname[$w[0]]=$w[2];
    $atomname[$w[0]]=$w[3];
#  }
}
close(IN);


#-------------------------------------------------------------------
# Do in A	   


@res_bb_mean=0; @res_sc_mean=0; @res_all_mean=0;
for $f (1..$nconf) {
  open(IN,"solv-a/solv-a-frame-$f.dat") or die "Could not open file solv-a/solv-a-frame-$f.dat";
  foreach $line (<IN>) {
    if ($line !~/TOT/) {
      @w=split(" ",$line);
      $res_bb[$w[0]][$f]=$w[1];
      $res_sc[$w[0]][$f]=$w[2];
      $res_all[$w[0]][$f]=$w[3];

      $res_bb_mean[$w[0]]+=$w[1];
      $res_sc_mean[$w[0]]+=$w[2];
      $res_all_mean[$w[0]]+=$w[3];
    }
  }
}

@res_bb_sd=0; @res_sc_sd=0; @res_all_sd=0;
foreach $i (@resA) {
  $res_bb_mean[$i]=$res_bb_mean[$i]/$nconf;
  $res_sc_mean[$i]=$res_sc_mean[$i]/$nconf;
  $res_all_mean[$i]=$res_all_mean[$i]/$nconf;
  for $n (1..$nconf) {
    $res_bb_sd[$i]+=($res_bb[$i][$n]-$res_bb_mean[$i])**2;
    $res_sc_sd[$i]+=($res_sc[$i][$n]-$res_sc_mean[$i])**2;
    $res_all_sd[$i]+=($res_all[$i][$n]-$res_all_mean[$i])**2;
  }
  $res_bb_sd[$i]=sqrt($res_bb_sd[$i]/$nconf);
  $res_sc_sd[$i]=sqrt($res_sc_sd[$i]/$nconf);
  $res_all_sd[$i]=sqrt($res_all_sd[$i]/$nconf);
}

foreach $i (@resA) {
  $filename="solv-a/solv-a-res-$i.dat";
  open(OUT,">$filename");
  for $n (1..$nconf) {
    printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
		$n, $res_bb[$i][$n], $res_sc[$i][$n], $res_all[$i][$n]);
  }
  print OUT "#-----------------------------------------\n";
  printf OUT ("#AVE    %10.4f %10.4f %10.4f \n",
	      $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  printf OUT ("#SD     %10.4f %10.4f %10.4f \n",
	      $res_bb_sd[$i], $res_sc_sd[$i], $res_all_sd[$i]);
  close(OUT);
}


open(OUT,">solv-a/solv-a-res.dat");
foreach $i (@resA) {
  printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
	      $i, $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  $res_bb_tot+=$res_bb_mean[$i];
  $res_sc_tot+=$res_sc_mean[$i];
  $res_all_tot+=$res_all_mean[$i];
}
print OUT "#------------------------------------------\n";
printf OUT ("#TOT    %10.4f %10.4f %10.4f \n",
	    $res_bb_tot, $res_sc_tot, $res_all_tot);


#-------------------------------------------------------------------
# Do in B	   

@res_bb_mean=0; @res_sc_mean=0; @res_all_mean=0;
for $f (1..$nconf) {
  open(IN,"solv-b/solv-b-frame-$f.dat") or die "Could not open file solv-b/solv-b-frame-$f.dat";
  foreach $line (<IN>) {
    if ($line !~/TOT/) {
      @w=split(" ",$line);
      $res_bb[$w[0]][$f]=$w[1];
      $res_sc[$w[0]][$f]=$w[2];
      $res_all[$w[0]][$f]=$w[3];

      $res_bb_mean[$w[0]]+=$w[1];
      $res_sc_mean[$w[0]]+=$w[2];
      $res_all_mean[$w[0]]+=$w[3];
    }
  }
}

@res_bb_sd=0; @res_sc_sd=0; @res_all_sd=0;
foreach $i (@resB) {
  $res_bb_mean[$i]=$res_bb_mean[$i]/$nconf;
  $res_sc_mean[$i]=$res_sc_mean[$i]/$nconf;
  $res_all_mean[$i]=$res_all_mean[$i]/$nconf;
  for $n (1..$nconf) {
    $res_bb_sd[$i]+=($res_bb[$i][$n]-$res_bb_mean[$i])**2;
    $res_sc_sd[$i]+=($res_sc[$i][$n]-$res_sc_mean[$i])**2;
    $res_all_sd[$i]+=($res_all[$i][$n]-$res_all_mean[$i])**2;
  }
  $res_bb_sd[$i]=sqrt($res_bb_sd[$i]/$nconf);
  $res_sc_sd[$i]=sqrt($res_sc_sd[$i]/$nconf);
  $res_all_sd[$i]=sqrt($res_all_sd[$i]/$nconf);
}

foreach $i (@resB) {
  $filename="solv-b/solv-b-res-$i.dat";
  open(OUT,">$filename");
  for $n (1..$nconf) {
    printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
		$n, $res_bb[$i][$n], $res_sc[$i][$n], $res_all[$i][$n]);
  }
  print OUT "#-----------------------------------------\n";
  printf OUT ("#AVE    %10.4f %10.4f %10.4f \n",
	      $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  printf OUT ("#SD     %10.4f %10.4f %10.4f \n",
	      $res_bb_sd[$i], $res_sc_sd[$i], $res_all_sd[$i]);
  close(OUT);
}

$res_bb_tot=0; $res_sc_tot=0; $res_all_tot=0;
open(OUT,">solv-b/solv-b-res.dat");
foreach $i (@resB) {
  printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
	      $i, $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  $res_bb_tot+=$res_bb_mean[$i];
  $res_sc_tot+=$res_sc_mean[$i];
  $res_all_tot+=$res_all_mean[$i];
}
print OUT "#------------------------------------------\n";
printf OUT ("#TOT    %10.4f %10.4f %10.4f \n",
	    $res_bb_tot, $res_sc_tot, $res_all_tot);
	    
#-------------------------------------------------------------------
# Do in complex	   

@res_bb_mean=0; @res_sc_mean=0; @res_all_mean=0;
for $f (1..$nconf) {
  open(IN,"solv-comp/solv-comp-frame-$f.dat") or die "Could not open file solv-comp/solv-comp-frame-$f.dat";
  foreach $line (<IN>) {
    if ($line !~/TOT/) {
      @w=split(" ",$line);
      $res_bb[$w[0]][$f]=$w[1];
      $res_sc[$w[0]][$f]=$w[2];
      $res_all[$w[0]][$f]=$w[3];

      $res_bb_mean[$w[0]]+=$w[1];
      $res_sc_mean[$w[0]]+=$w[2];
      $res_all_mean[$w[0]]+=$w[3];
    }
  }
}

@res_bb_sd=0; @res_sc_sd=0; @res_all_sd=0;
foreach $i (@resAB)  {
  $res_bb_mean[$i]=$res_bb_mean[$i]/$nconf;
  $res_sc_mean[$i]=$res_sc_mean[$i]/$nconf;
  $res_all_mean[$i]=$res_all_mean[$i]/$nconf;
  for $n (1..$nconf) {
    $res_bb_sd[$i]+=($res_bb[$i][$n]-$res_bb_mean[$i])**2;
    $res_sc_sd[$i]+=($res_sc[$i][$n]-$res_sc_mean[$i])**2;
    $res_all_sd[$i]+=($res_all[$i][$n]-$res_all_mean[$i])**2;
  }
  $res_bb_sd[$i]=sqrt($res_bb_sd[$i]/$nconf);
  $res_sc_sd[$i]=sqrt($res_sc_sd[$i]/$nconf);
  $res_all_sd[$i]=sqrt($res_all_sd[$i]/$nconf);
}

foreach $i (@resAB)  {
  $filename="solv-comp/solv-comp-res-$i.dat";
  open(OUT,">$filename");
  for $n (1..$nconf) {
    printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
		$n, $res_bb[$i][$n], $res_sc[$i][$n], $res_all[$i][$n]);
  }
  print OUT "#---------------------------------------------\n";
  printf OUT ("#AVE    %10.4f %10.4f %10.4f \n",
	      $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  printf OUT ("#SD     %10.4f %10.4f %10.4f \n",
	      $res_bb_sd[$i], $res_sc_sd[$i], $res_all_sd[$i]);
  close(OUT);
}

$res_bb_tot=0; $res_sc_tot=0; $res_all_tot=0;
open(OUT,">solv-comp/solv-comp-res.dat");
foreach $i (@resAB) {
  printf OUT ("%4d    %10.4f %10.4f %10.4f \n",
	      $i, $res_bb_mean[$i], $res_sc_mean[$i], $res_all_mean[$i]);
  $res_bb_tot+=$res_bb_mean[$i];
  $res_sc_tot+=$res_sc_mean[$i];
  $res_all_tot+=$res_all_mean[$i];
}
print OUT "#----------------------------------------------\n";
printf OUT ("#TOT    %10.4f %10.4f %10.4f \n",
	    $res_bb_tot, $res_sc_tot, $res_all_tot);



